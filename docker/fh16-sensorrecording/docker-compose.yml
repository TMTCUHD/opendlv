# Please note that docker-compose does not prescribe a startup order

# microservice for tcpdump
opendlv-tcpdump:
    build: tcpdump
    net: "host"
    restart: always
    volumes:
    - /dumps:/dumps
    working_dir: "/dumps"
    command: /usr/sbin/tcpdump -G 900 -w 'CID-62_%Y-%m-%d_%H:%M:%S.pcap' -W 96


# microservice for diagnostics-health
# The host's /dev and /proc directories are mapped into the Docker container
# to check for expected properties like device nodes. The privileged flag
# allows the unrestricted access.
diagnostics-health:
    build: .
    net: "host"
    working_dir: "/opt/opendlv/bin"
    restart: always
    privileged: true
    volumes:
    - /dev:/from.host/dev
    - /proc:/from.host/proc
    environment:
    - LD_LIBRARY_PATH=/opt/opendlv/lib
    command: "/opt/opendlv/bin/opendlv-system-core-diagnostics-health --cid=62 --freq=1"


# microservice for proxy-can
proxy-can:
    build: .
    net: "host"
    volumes:
    - /dumps:/dumps
    working_dir: "/dumps"
    restart: always
    environment:
    - LD_LIBRARY_PATH=/opt/opendlv/lib
    command: "/opt/opendlv/bin/opendlv-system-core-proxy-can --cid=62 --freq=100"


# microservice for proxy-lidar
proxy-lidar:
    build: .
    net: "host"
    volumes:
    - /dumps:/dumps
    working_dir: "/dumps"
    restart: always
    devices:
    - "/dev/ttyS0:/dev/ttyS0"
    environment:
    - LD_LIBRARY_PATH=/opt/opendlv/lib
    command: "/opt/opendlv/bin/opendlv-system-core-proxy-lidar --cid=62 --freq=1"


# microservice for proxy-gps
proxy-gps:
    build: .
    net: "host"
    volumes:
    - /dumps:/dumps
    working_dir: "/dumps"
    restart: always
    environment:
    - LD_LIBRARY_PATH=/opt/opendlv/lib
    command: "/opt/opendlv/bin/opendlv-system-core-proxy-gps --cid=62"

