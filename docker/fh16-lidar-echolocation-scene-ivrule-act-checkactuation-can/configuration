###############################################################################
###############################################################################
#
# GLOBAL CONFIGURATION
#
# The following attributes define the buffer sizes for recording and
# replaying. You need to adjust these parameters depending on the
# camera resolution for example (640x480x3 --> 1,000,000 for memorySegment,
# 1280x720x3 --> 2,800,000), 1280x1024x3 --> 3,932,160
global.buffer.memorySegmentSize = 4000000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 50 # Number of memory segments.

# List of modules expected to participate in a session.
global.session.expectedModules = diagnostics-health,knowledge-ivrule,action-setopticalflow,action-act,safety-checkactuation,proxy-can

###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODSUPERCOMPONENT
#
# If the managed level is pulse_shift, all connected modules will be informed
# about the supercomponent's real time by this increment per module. Thus, the
# execution times per modules are better aligned with supercomponent and the
# data exchange is somewhat more predictable.
odsupercomponent.pulseshift.shift = 10000 # (in microseconds)

# If the managed level is pulse_time_ack, this is the timeout for waiting for
# an ACK message from a connected client.
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)

# If the managed level is pulse_time_ack, the modules are triggered sequentially
# by sending pulses and waiting for acknowledgment messages. To allow the modules
# to deliver their respective containers, this yielding time is used to sleep
# before supercomponent sends the pulse messages the next module in this execution
# cycle. This value needs to be adjusted for networked simulations to ensure
# deterministic execution. 
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)

# List of modules (without blanks) that will not get a pulse message from odsupercomponent.
odsupercomponent.pulsetimeack.exclude = odcockpit


###############################################################################
###############################################################################
# proxy
proxy-can.devicenode = /dev/pcan1          # PEAK CAN device.
proxy-can.record_gcm = 1                   # Set to 1 to dump received CAN data into a .rec file.
proxy-can.record_mapped_data = 1           # Set to 1 to dump mapped data from a CAN message into a .rec file.


###############################################################################
###############################################################################
# proxy
proxy-lidar.type = sick
proxy-lidar.port = /dev/ttyS0
proxy-lidar.baudrate = 9600
proxy-lidar.mount.x = 1.25
proxy-lidar.mount.y = 0.0
proxy-lidar.mount.z = 1.0
proxy-lidar.mount.roll = 0.0
proxy-lidar.mount.pitch = 0.0
proxy-lidar.mount.yaw = 0.0
proxy-lidar.record = 1  # Set to 1 to dump Lidar data in .rec format.


###############################################################################
###############################################################################
# Scene
knowledge-scene.mergeDistance = 4.0
knowledge-scene.validUntilDuration = 1
knowledge-scene.memoryCapacity = 1.0 # seconds



###############################################################################
###############################################################################
# Echolocation
sensation-echolocation.memoryThreshold = 0
sensation-echolocation.pointCloudSizeMinimum = 3 #number of points 
sensation-echolocation.pointCloudRadius = 2 #meters 

###############################################################################
###############################################################################
# Ivrule
knowledge-ivrule.mioAngleRange = 45.0 #degrees 
knowledge-ivrule.mioDistanceRange = 50.0 #meters
knowledge-ivrule.memoryDuration = 1 #seconds
knowledge-ivrule.desiredAngularSize = 4 #degrees
knowledge-ivrule.desiredOpticalFlow = 5.6 #meters/s


###############################################################################
###############################################################################
### Safety
safety-checkactuation.maxAllowedDeceleration = 3


###############################################################################
###############################################################################
# Diagnostics
diagnostics-health.script = ./checkHealth.sh
diagnostics-health.sleep = 60 # Sleep between health checks in seconds

